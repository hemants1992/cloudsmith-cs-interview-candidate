name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: "interview-hemant-sharma"
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: "github_actions-thir"

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist
          repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: List directory contents
        run: ls -la dist/
        shell: bash

      # - uses: cloudsmith-io/cloudsmith-cli-action@master
      #   with:
      #     oidc-namespace: 'your-oidc-namespace'
      #     oidc-service-slug: 'your-service-account-slug'    

      # This step handles the entire OIDC authentication flow automatically.
      # It gets a token from GitHub and exchanges it for a Cloudsmith token.
      - name: Authenticate with Cloudsmith via OIDC
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}     # Replace with your Cloudsmith workspace
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }} # Replace with your service account slug
          oidc-auth-only: 'true'

      - name: Push package to Cloudsmith
        run: |
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
        shell: bash



